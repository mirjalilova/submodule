syntax = "proto3";

option go_package = "genproto/health_sync";

package health_sync;

import "common.proto";

service WearableDataService {
    rpc Create (WearableDataCreate) returns (Void) {}
    rpc Update(WearableDataUpdate) returns (Void) {}
    rpc Delete(GetById) returns (Void) {}
    rpc Get(GetById) returns (WearableDataRes) {}
    rpc List(GetAllWearableDataReq) returns (GetAllWearableDataRes) {}
    rpc GetRealTimeMonitoringData(GetById) returns (WearableDataRes) {}
}

message WearableData {
    string id = 1;
    string user_id = 2;
    string device_type = 3;
    int32  step_count = 4;
    float  calories_burned = 5;
    float  distance_traveled = 6;
    int32  heart_rate = 7;
    float  sleep_duration = 8;
    string workout_type = 9;
    float  temperature = 10;
    string recorded_timestamp = 11;
    string created_at = 12;
    string updated_at = 13;
    int32  deleted_at = 14;
}

message WearableDataCreate {
    string user_id = 1;
    string device_type = 2;
    int32  step_count = 3;
    float  calories_burned = 4;
    float  distance_traveled = 5;
    int32  heart_rate = 6;
    float  sleep_duration = 7;
    string workout_type = 8;
    float  temperature = 9;
    string recorded_timestamp = 10;
}

message WearableDataUpdate {
    string device_type = 1;
    int32  step_count = 2;
    float  calories_burned = 3;
    float  distance_traveled = 4;
    int32  heart_rate = 5;
    float  sleep_duration = 6;
    string workout_type = 7;
    string recorded_timestamp = 8;
    float  temperature = 9;
    string id = 10;
}

message WearableDataUpdateBody {
    string device_type = 1;
    int32  step_count = 2;
    float  calories_burned = 3;
    float  distance_traveled = 4;
    int32  heart_rate = 5;
    float  sleep_duration = 6;
    string workout_type = 7;
    string recorded_timestamp = 8; 
}

message WearableDataRes {
    string id = 1;
    string user_id = 2;
    string device_type = 3;
    int32  step_count = 4;
    float  calories_burned = 5;
    float  distance_traveled = 6;
    int32  heart_rate = 7;
    float  sleep_duration = 8;
    string workout_type = 9;
    float  temperature = 10;
    string recorded_timestamp = 11;
}

message GetAllWearableDataReq {
    string user_id = 1;
    string recorded_timestamp = 2;
    Filter filter = 3;
}

message GetAllWearableDataRes {
    repeated WearableDataRes wearable_data = 1;
    int32  count = 2;
}